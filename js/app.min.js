/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/app.js":
/*!***********************!*\
  !*** ./src/js/app.js ***!
  \***********************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\r\n\r\nconst swiper = new Swiper('.content_swiper', {\r\n\r\n    spaceBetween: 80,\r\n\r\n    speed: 1000,\r\n\r\n    pagination: {\r\n        el: '.swiper-pagination',\r\n        clickable: true,\r\n    },\r\n\r\n    autoplay: {\r\n        delay: 2500,\r\n\r\n        disableOnInteraction: false,\r\n    },\r\n});\r\n\r\nconst swiper_2 = new Swiper('.swipers', {\r\n\r\n    spaceBetween: 40,\r\n\r\n    speed: 800,\r\n\r\n    slidesPerView: 3,\r\n\r\n    // pagination: {\r\n    //     el: '.swiper-pagination',\r\n    //     clickable: true,\r\n    // },\r\n\r\n    // autoplay: {\r\n    //     delay: 2500,\r\n\r\n    //     disableOnInteraction: false,\r\n    // },\r\n\r\n    navigation: {\r\n        nextEl: '.swiper-button-next',\r\n        prevEl: '.swiper-button-prev',\r\n    },\r\n\r\n    slidesPerView: 1,\r\n\r\n    breakpoints: {\r\n        320: {\r\n            slidesPerView: 1,\r\n        },\r\n        785: {\r\n            slidesPerView: 2,\r\n        },\r\n        1150: {\r\n            slidesPerView: 3,\r\n        },\r\n    },\r\n});\r\n\r\n\r\n// Menu Links\r\n\r\nconst menuLinks = document.querySelectorAll('.menu_item');\r\n\r\n// if (menuLinks) {\r\n\r\nmenuLinks.forEach(menuEvent);\r\n\r\nfunction menuEvent(item) {\r\n    const menuPages = document.querySelectorAll('.menuPages');\r\n\r\n    // if (menuPages) {\r\n    item.addEventListener('click', function () {\r\n        let itemId = item.getAttribute('data-menu');\r\n        let currentPage = document.querySelector(itemId);\r\n\r\n        if (!item.classList.contains('_active')) {\r\n            for (let i = 0; i < menuLinks.length; i++) {\r\n                menuLinks[i].classList.remove('_active');\r\n                menuPages[i].classList.remove('_active');\r\n            }\r\n\r\n            item.classList.add('_active');\r\n            currentPage.classList.add('_active');\r\n            document.body.classList.add('lock');\r\n\r\n        } else if (item.classList.contains('_active')) {\r\n            item.classList.remove('_active');\r\n            currentPage.classList.remove('_active');\r\n            document.body.classList.remove('lock');\r\n        }\r\n    })\r\n    // }\r\n}\r\n// }\r\n\r\nconst icon = document.querySelector('.menu_icon');\r\n\r\n// limit text\r\n\r\nvar myText = document.querySelector('#my-text');\r\nvar result = document.querySelector('#result');\r\n\r\nvar limit = 150;\r\n\r\nresult.textContent = 0 + \"/\" + limit;\r\n\r\nmyText.addEventListener(\"input\", function () {\r\n    var textLength = myText.value.length;\r\n\r\n    if (textLength > limit) {\r\n        myText.style.borderColor = \"#ff2851\";\r\n        result.textContent = \"* Characters out of limit \" + textLength + \"/\" + limit;\r\n        result.classList.add('limit');\r\n    } else if (textLength <= limit) {\r\n        myText.style.borderColor = \"#b2b2b2\";\r\n        result.textContent = textLength + \"/\" + limit;\r\n        result.classList.remove('limit');\r\n    }\r\n});\r\n\r\n// Add Review Button\r\n\r\nconst addReviewBtn = document.querySelector('.review_button');\r\nconst addReviewPage = document.querySelector('.add_review');\r\n\r\naddReviewBtn.addEventListener('click', function (e) {\r\n    document.body.classList.add('lock');\r\n    addReviewBtn.classList.add('_acitve');\r\n    addReviewPage.classList.add('_active');\r\n});\r\n\r\n// Close Add Review\r\n\r\nconst addReviewCross = document.querySelector('.review_cross_container');\r\n\r\naddReviewCross.addEventListener('click', function () {\r\n    document.body.classList.remove('lock');\r\n    addReviewBtn.classList.remove('_acitve');\r\n    addReviewPage.classList.remove('_active');\r\n});\r\n\r\n// submit form\r\n\r\nvar submitBtn = document.querySelector('.review_submit');\r\nvar myUsername = document.querySelector('#my-username');\r\nvar usernameWarning = document.querySelector('.username_warning');\r\n\r\nvar usernameLimit = 30;\r\n\r\nsubmitBtn.addEventListener('click', function (e) {\r\n    var textLength = myText.value.length;\r\n    var usernameLength = myUsername.value.length;\r\n    var thanks = document.querySelector('.thanks');\r\n\r\n    if (textLength >= 3 && usernameLength >= 3 && textLength <= limit && usernameLength <= usernameLimit) {\r\n        thanks.classList.add('show');\r\n        setTimeout(function () {\r\n            thanks.classList.remove('show');\r\n        }, 3500);\r\n        setTimeout(function () {\r\n            addReviewBtn.classList.remove('_acitve');\r\n            addReviewPage.classList.remove('_active');\r\n        }, 3000);\r\n        setTimeout(function () {\r\n            myUsername.value = '';\r\n            myText.value = '';\r\n            result.textContent = 0 + \"/\" + limit;\r\n        }, 3500);\r\n\r\n        console.log('Accepted');\r\n    }\r\n\r\n    if (textLength < 3) {\r\n        myText.style.borderColor = \"#ff2851\";\r\n        result.textContent = \"* You must write at least 3 characters \" + textLength + \"/\" + limit;\r\n        result.classList.add('limit');\r\n        console.log('Rejected');\r\n    }\r\n\r\n    if (usernameLength < 3) {\r\n        myUsername.style.borderColor = \"#ff2851\";\r\n        usernameWarning.textContent = \"* You must write at least 3 characters\";\r\n        console.log('Rejected');\r\n    } else if (usernameLength >= 3 && usernameLength <= usernameLimit) {\r\n        usernameWarning.textContent = null;\r\n        myUsername.style.borderColor = \"#b2b2b2\";\r\n    }\r\n\r\n    if (usernameLength > usernameLimit) {\r\n        myUsername.style.borderColor = \"#ff2851\";\r\n        usernameWarning.textContent = \"* Write less than 30 characters\";\r\n    } else if (usernameLength <= usernameLimit && usernameLength >= 3) {\r\n        usernameWarning.textContent = null;\r\n        myUsername.style.borderColor = \"#b2b2b2\";\r\n    }\r\n\r\n    e.preventDefault();\r\n});\r\n\r\n// Swiper Buttons\r\n\r\nconst swiperContainer = document.querySelector('.swipers');\r\n\r\nif (swiperContainer) {\r\n    const swiper_button_1 = swiperContainer.querySelector('.swiper-button-prev');\r\n    const swiper_button_2 = swiperContainer.querySelector('.swiper-button-next');\r\n\r\n    swiper_button_1.addEventListener('click', function () {\r\n        swiper_button_1.classList.add('animate');\r\n        setTimeout(function () {\r\n            swiper_button_1.classList.remove('animate');\r\n        }, 500);\r\n    });\r\n\r\n    swiper_button_2.addEventListener('click', function () {\r\n        swiper_button_2.classList.add('animate');\r\n        setTimeout(function () {\r\n            swiper_button_2.classList.remove('animate');\r\n        }, 600);\r\n    });\r\n}\r\n\r\n// Spoiler\r\n\r\nconst items = document.querySelectorAll('.spoiler_button');\r\n\r\nfunction toggleAccordion() {\r\n    const item = this;\r\n    const itemToggle = this.getAttribute('data-accord');\r\n    const itemText = this.querySelector('.spoiler_button_title');\r\n    const content = this.parentNode.querySelector('.spoiler_text');\r\n\r\n    this.classList.add('animate');\r\n\r\n    // setTimeout(accordTimeout(), 500);\r\n\r\n    setTimeout(function accordTimeout() {\r\n        // console.log('da');\r\n        item.classList.remove('animate');\r\n    }, 500);\r\n\r\n\r\n    if (itemToggle == 'true') {\r\n        this.setAttribute('data-accord', 'false');\r\n        content.setAttribute('data-accord', 'false');\r\n        setTimeout(function setText() {\r\n            itemText.textContent = 'Learn more';\r\n        }, 500);\r\n\r\n    }\r\n    if (itemToggle == 'false') {\r\n        this.setAttribute('data-accord', 'true');\r\n        content.setAttribute('data-accord', 'true');\r\n        content.style.maxHeight = content.scrollHeight + 'px';\r\n        setTimeout(function setText() {\r\n            itemText.textContent = 'Hide';\r\n        }, 500);\r\n    } else {\r\n        content.style.maxHeight = null;\r\n    }\r\n}\r\n\r\nitems.forEach(item => item.addEventListener('click', toggleAccordion));\r\n\r\n// Phone Input\r\n\r\nconst isNumericInput = (event) => {\r\n    const key = event.keyCode;\r\n    return ((key >= 48 && key <= 57) || // Allow number line\r\n        (key >= 96 && key <= 105) // Allow number pad\r\n    );\r\n};\r\n\r\nconst isModifierKey = (event) => {\r\n    const key = event.keyCode;\r\n    return (event.shiftKey === true || key === 35 || key === 36) || // Allow Shift, Home, End\r\n        (key === 8 || key === 9 || key === 13 || key === 46) || // Allow Backspace, Tab, Enter, Delete\r\n        (key > 36 && key < 41) || // Allow left, up, right, down\r\n        (\r\n            // Allow Ctrl/Command + A,C,V,X,Z\r\n            (event.ctrlKey === true || event.metaKey === true) &&\r\n            (key === 65 || key === 67 || key === 86 || key === 88 || key === 90)\r\n        )\r\n};\r\n\r\nconst enforceFormat = (event) => {\r\n    // Input must be of a valid number format or a modifier key, and not longer than ten digits\r\n    if (!isNumericInput(event) && !isModifierKey(event)) {\r\n        event.preventDefault();\r\n    }\r\n};\r\n\r\nconst formatToPhone = (event) => {\r\n    if (isModifierKey(event)) { return; }\r\n\r\n    // I am lazy and don't like to type things more than once\r\n    const target = event.target;\r\n    const input = event.target.value.replace(/\\D/g, '').substring(0, 10); // First ten digits of input only\r\n    const zip = input.substring(0, 3);\r\n    const middle = input.substring(3, 6);\r\n    const last = input.substring(6, 10);\r\n\r\n    if (input.length > 6) { target.value = `(${zip}) ${middle} - ${last}`; }\r\n    else if (input.length > 3) { target.value = `(${zip}) ${middle}`; }\r\n    else if (input.length > 0) { target.value = `(${zip}`; }\r\n};\r\n\r\nconst inputElement = document.getElementById('phoneNumber');\r\ninputElement.addEventListener('keydown', enforceFormat);\r\ninputElement.addEventListener('keyup', formatToPhone);\r\n\r\n// Select\r\n\r\nfunction select() {\r\n    let selectHeader = document.querySelectorAll('.select_header');\r\n    if (selectHeader) {\r\n        let selectItem = document.querySelectorAll('.select_item');\r\n        let menuValues = document.querySelectorAll('.menu_option_value');\r\n        let menuPieces = document.querySelectorAll('.menu_option_pieces');\r\n        let menuWeights = document.querySelectorAll('.menu_option_weight');\r\n        let menuOptions = document.querySelector('.menu_options');\r\n\r\n        selectHeader.forEach(item => {\r\n            item.addEventListener('click', selectToggle)\r\n        });\r\n\r\n        selectItem.forEach(item => {\r\n            item.addEventListener('click', selectChoose)\r\n        });\r\n\r\n        selectItem.forEach(item => {\r\n            item.addEventListener('click', selectColor)\r\n        });\r\n\r\n        selectItem.forEach(item => menuOrder(item))\r\n\r\n        function selectColor() {\r\n            let select = this.closest('.select');\r\n            let currentText = select.querySelector('.select_current');\r\n\r\n            for (let i = 0; i < selectItem.length; i++) {\r\n                if (selectItem[i].innerText == currentText.innerText) {\r\n                    selectItem[i].classList.add('color');\r\n                } else if (selectItem[i].innerText != currentText.innerText) {\r\n                    selectItem[i].classList.remove('color');\r\n                }\r\n            }\r\n        }\r\n\r\n        function selectToggle() {\r\n            this.parentElement.classList.toggle('is-active');\r\n        }\r\n\r\n        function selectChoose() {\r\n            let text = this.innerText,\r\n                select = this.closest('.select'),\r\n                currentText = select.querySelector('.select_current');\r\n            currentText.innerText = text;\r\n            select.classList.remove('is-active');\r\n        }\r\n\r\n        function menuOrder(item) {\r\n            item.addEventListener('click', function (e) {\r\n                if (this.innerText.toLowerCase() == 'cheaper first') {\r\n                    let menuValuesArray = Array.from(menuValues);\r\n\r\n                    menuValuesArray.sort(function (a, b) {\r\n                        return parseFloat(a.textContent) - parseFloat(b.textContent);\r\n                    });\r\n\r\n                    menuOptions.classList.add('opacity');\r\n\r\n                    menuValuesArray.forEach(function (element, index) {\r\n                        window.setTimeout(function () {\r\n                            element.parentElement.parentElement.parentElement.parentElement.parentElement.style.order = index + 1;\r\n                        }, 300);\r\n                    });\r\n\r\n                    window.setTimeout(function () {\r\n                        menuOptions.classList.remove('opacity');\r\n                    }, 500);\r\n                } else if (this.innerText.toLowerCase() == 'expensive first') {\r\n                    let menuValuesArray = Array.from(menuValues);\r\n\r\n                    menuValuesArray.sort(function (a, b) {\r\n                        return parseFloat(b.textContent) - parseFloat(a.textContent);\r\n                    });\r\n\r\n                    menuOptions.classList.add('opacity');\r\n\r\n                    menuValuesArray.forEach(function (element, index) {\r\n                        window.setTimeout(function () {\r\n                            element.parentElement.parentElement.parentElement.parentElement.parentElement.style.order = index + 1;\r\n                        }, 300);\r\n                    });\r\n\r\n                    window.setTimeout(function () {\r\n                        menuOptions.classList.remove('opacity');\r\n                    }, 500);\r\n                } else if (this.innerText.toLowerCase() == 'number of pieces') {\r\n                    let menuPiecesArray = Array.from(menuPieces);\r\n\r\n                    menuPiecesArray.sort(function (a, b) {\r\n                        return parseFloat(b.textContent) - parseFloat(a.textContent);\r\n                    });\r\n\r\n                    menuOptions.classList.add('opacity');\r\n\r\n                    menuPiecesArray.forEach(function (element, index) {\r\n                        window.setTimeout(function () {\r\n                            element.parentElement.parentElement.parentElement.parentElement.style.order = index + 1;\r\n                        }, 300);\r\n                    });\r\n\r\n                    window.setTimeout(function () {\r\n                        menuOptions.classList.remove('opacity');\r\n                    }, 500);\r\n                } else if (this.innerText.toLowerCase() == 'weight') {\r\n                    let menuWeightsArray = Array.from(menuWeights);\r\n\r\n                    menuWeightsArray.sort(function (a, b) {\r\n                        return parseFloat(b.textContent) - parseFloat(a.textContent);\r\n                    });\r\n\r\n                    menuOptions.classList.add('opacity');\r\n\r\n                    menuWeightsArray.forEach(function (element, index) {\r\n                        window.setTimeout(function () {\r\n                            element.parentElement.parentElement.parentElement.parentElement.style.order = index + 1;\r\n                        }, 300);\r\n                    });\r\n\r\n                    window.setTimeout(function () {\r\n                        menuOptions.classList.remove('opacity');\r\n                    }, 500);\r\n                } else {\r\n                    menuOptions.classList.add('opacity');\r\n\r\n                    menuWeights.forEach(function (element, index) {\r\n                        window.setTimeout(function () {\r\n                            element.parentElement.parentElement.parentElement.parentElement.style.order = index + 1;\r\n                        }, 300);\r\n                    });\r\n                    \r\n                    window.setTimeout(function () {\r\n                        menuOptions.classList.remove('opacity');\r\n                    }, 500);\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nselect();\r\n\r\ndocument.addEventListener('click', function e(e) {\r\n\r\n    const selectParent = document.querySelectorAll('.select_header');\r\n\r\n    function removeActive(selects) {\r\n        let allChildren = selects.querySelectorAll('*');\r\n        let selector = document.querySelector('.select');\r\n\r\n        for (let i = 0; i < allChildren.length; i++) {\r\n            if (allChildren[i] != e.target && selects != e.target) {\r\n                selector.classList.remove('is-active');\r\n                break;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    selectParent.forEach(selects => removeActive(selects));\r\n})\n\n//# sourceURL=webpack://gulp-2022/./src/js/app.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/js/app.js"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;